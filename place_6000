import sys
import math

dest_x=dest_y =0

#--------------------------
#---DEFINITION DES CLASSES
#--------------------------

class Human :
    def __init__ (self,human_id, human_x,human_y,dist_menace="",rescue_value=""):
        self.human_id = human_id
        self.human_x=human_x
        self.human_y=human_y
        self.dist_menace=dist_menace
        self.rescue_value=rescue_value


class Zombie :
    def __init__ (self,zombie_id, zombie_x,zombie_y,zombie_xnext,zombie_ynext):
        self.zombie_id = zombie_id
        self.zombie_x=zombie_x
        self.zombie_y=zombie_y
        self.zombie_xnext=zombie_xnext
        self.zombie_ynext=zombie_ynext

class Ash:
    def __init__(self, x,y):
        self.x=x
        self.y=y

#--------------------------
#---DEFINITION DES METHODES
#--------------------------

#Méthodes calcul DIstance
def distance (x1,y1,x2,y2):
    distance = math.sqrt((x2-x1)**2+(y2-y1)**2)
    return distance



# game loop
while True:
    x, y = [int(i) for i in input().split()]
    ash = Ash (x,y)
    print("ash coordinates :",ash.x,ash.y, file=sys.stderr, flush=True)
    l_zombie=[]
    l_human=[]

    human_count = int(input())
    for i in range(human_count):
        human_id, human_x, human_y = [int(j) for j in input().split()]
        human = Human (human_id, human_x, human_y)
        l_human.append(human)

    zombie_count = int(input())
    for i in range(zombie_count):
        zombie_id, zombie_x, zombie_y, zombie_xnext, zombie_ynext = [int(j) for j in input().split()]
        zombie = Zombie (zombie_id, zombie_x, zombie_y, zombie_xnext, zombie_ynext)
        l_zombie.append(zombie)


    # ------------------------
    #-----------GAME ---------
    #-------------------------

    # humain le plus proche de ash
    dist_min = 16000
    humain_plus_proche_ash = 0
    for i in range(len(l_human)):
        if distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y) < dist_min:
            dist_min = distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y)
            humain_plus_proche_ash = l_human[i].human_id

    # Zombie le plus proche de ash
    dist_min = 16000
    zombie_plus_proche_ash = 0
    for i in range(len(l_zombie)):
        if distance (ash.x,ash.y,l_zombie[i].zombie_x,l_zombie[i].zombie_y) < dist_min:
            dist_min = distance (ash.x,ash.y,l_zombie[i].zombie_x,l_zombie[i].zombie_y)
            zombie_plus_proche_ash = l_zombie[i].zombie_id

    #dist zombie / humain la plus petite et définition des humain et zombie plus ou moins menacants
    dist_min = 16000
    dist_min_par_humain = 16000
    dist_ash_zombieplusmenacant = 19000
    dist_humainplusmenace_zombieplusmenacant = 19000
    humain_plus_menace = 0
    zombie_plus_menacant = 0

    for i in range(len(l_human)):
        dist_min_par_humain = 16000
        for j in range(len(l_zombie)):
            if distance (l_human[i].human_x,l_human[i].human_y,l_zombie[j].zombie_x,l_zombie[j].zombie_y) < dist_min:
                dist_min = distance (l_human[i].human_x,l_human[i].human_y,l_zombie[j].zombie_x,l_zombie[j].zombie_y)
                humain_plus_menace = l_human[i].human_id
                zombie_plus_menacant = l_zombie[j].zombie_id
                dist_ash_zombieplusmenacant = distance (ash.x,ash.y,l_zombie[j].zombie_x,l_zombie[j].zombie_y)
                dist_humainplusmenace_zombieplusmenacant = dist_min
            
            if distance (l_human[i].human_x,l_human[i].human_y,l_zombie[j].zombie_x,l_zombie[j].zombie_y) < dist_min_par_humain:
                dist_min_par_humain = distance (l_human[i].human_x,l_human[i].human_y,l_zombie[j].zombie_x,l_zombie[j].zombie_y)
                l_human[i].dist_menace = dist_min_par_humain
        print("distance menace par humain :",l_human[i].human_id,l_human[i].dist_menace, file=sys.stderr, flush=True)
        print("distance Ash <-> humain :",l_human[i].human_id,distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y), file=sys.stderr, flush=True)

    # Définition de la rescue Value de chaque humain
    for i in range (len(l_human)):
        if 2.5* l_human[i].dist_menace <  distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y)-2000:
            l_human[i].rescue_value = -1
        else :
            if distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y) > 0:
                l_human[i].rescue_value = l_human[i].dist_menace / distance (ash.x,ash.y,l_human[i].human_x,l_human[i].human_y)
            else :
                l_human[i].rescue_value = l_human[i].dist_menace / 1

        print("Human id :",l_human[i].human_id,"Rescue value",l_human[i].rescue_value, file=sys.stderr, flush=True)
        

    #définition des coordonées cibles

    #Human_id plus forte Rescue value
    human_id_plusforte_rescue_value = -2
    rescue_value = -2
    for i in range (len(l_human)):
        if l_human[i].rescue_value > rescue_value:
            rescue_value = l_human[i].rescue_value
            human_id_plusforte_rescue_value = l_human[i].human_id
    #  ash se précipite sur l'humain avec la plus grande rescue value
            dest_x = [ l_human[i].human_x for i in range(len(l_human)) if l_human[i].human_id == human_id_plusforte_rescue_value ][0]
            dest_y = [ l_human[i].human_y for i in range(len(l_human)) if l_human[i].human_id == human_id_plusforte_rescue_value ][0]
    
    if dist_humainplusmenace_zombieplusmenacant > 5000:
        #ash se précipite sur le zombie le plus proche
        dest_x = [ l_zombie[i].zombie_x for i in range(len(l_zombie)) if l_zombie[i].zombie_id == zombie_plus_proche_ash ][0]
        dest_y = [ l_zombie[i].zombie_y for i in range(len(l_zombie)) if l_zombie[i].zombie_id == zombie_plus_proche_ash ][0] 



    # Your destination coordinates
    print(f"{dest_x} {dest_y}")



# To debug: print("Debug messages...", file=sys.stderr, flush=True)
